[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-06-10T07:32:51.173Z",
        "line": 3,
        "name": "new scenario",
        "description": "",
        "id": "1st-feature;new-scenario",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 455000000,
              "status": "passed"
            },
            "line": 4,
            "name": "a book exists with an isbn of \"bingo\"",
            "match": {
              "arguments": [
                {
                  "val": "\"bingo\"",
                  "offset": 30
                }
              ],
              "location": "stepdefinitions.BookStepDefinitions.a_book_exists_with_isbn(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1785000000,
              "status": "passed"
            },
            "line": 5,
            "name": "a user retrieves the book by isbn",
            "match": {
              "location": "stepdefinitions.BookStepDefinitions.a_user_retrieves_the_book_by_isbn()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "io.cucumber.core.exception.CucumberException: Step [response includes the following in any order] is defined with 1 parameters at \u0027stepdefinitions.BookStepDefinitions.response_contains_in_any_order(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)\u0027.\nHowever, the gherkin step has 0 arguments.\nStep text: response includes the following in any order\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.arityMismatch(PickleStepDefinitionMatch.java:83)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:42)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:92)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:64)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:104)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:73)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:134)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:117)\r\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:131)\r\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)\r\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)\r\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\r\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1259)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:770)\r\n\tat org.testng.TestRunner.run(TestRunner.java:591)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:402)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:304)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1102)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1032)\r\n\tat org.testng.TestNG.run(TestNG.java:1000)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "duration": 1000000,
              "status": "failed"
            },
            "line": 6,
            "name": "response includes the following in any order",
            "match": {
              "location": "stepdefinitions.BookStepDefinitions.response_contains_in_any_order(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 7,
            "name": "the status code is 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 19
                }
              ],
              "location": "stepdefinitions.SecondStepDefinitions.verify_status_code(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "response includes the following",
            "match": {
              "location": "stepdefinitions.SecondStepDefinitions.response_equals(java.util.Map\u003cjava.lang.String, java.lang.String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Body",
                  "bing"
                ]
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "1st feature",
    "description": "",
    "id": "1st-feature",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/features1.feature",
    "tags": []
  }
]